/* Custom style classes */
@mixin attr-x($attr, $attr-count: 50, $attr-steps: 1, $unit: 'px') {
    $attr-list: null;
    @for $i from 1 through $attr-count {
        $attr-value: $attr-steps * $i;

        .#{$attr}#{$attr-value} {
            #{$attr}: #{$attr-value}#{$unit};
        }

         $attr-list: append($attr-list, unquote(".#{$attr}#{$attr-value}"), comma);
    }

    #{$attr-list} {
        //append style to all classes
        
    }
}

/* Size */
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

/* Prefixes */
@mixin css3-prefix($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}

/* Keyframe animation */
@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
      @content;
    }
    @-moz-keyframes #{$name} {
      @content;
    }
    @keyframes #{$name} {
      @content;
    }
}

/* Position */
@mixin position ($position, $top, $right, $bottom, $left) {
    position: $position; 
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
}

/* Breakpoint */
@mixin breakpoint($point) {
    @if $point == large {
       @media only screen and (max-width: 1223px) {
          @content;
       }
    } 
    @else if $point == tablet {
       @media only screen and (min-width: 768px) and (max-width: 1223px) {
          @content;
       }
    } 
    @else if $point == mobile {
       @media only screen and (max-width: 767px) {
          @content;
       }
    }
}

/* One line text */
@mixin text-shorten {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-line($fontsize, $line-height, $num-line){
    font-size: $fontsize;
    max-height: 
        $fontsize*$num-line + $line-height*$num-line;
    line-height: $fontsize + $line-height;
    display: -webkit-box;
    -webkit-line-clamp: $num-line;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Flex */
@mixin flex(
  $display: flex,
  $direction: row,
  $placeContent: null,
  $placeItems: null,
  $wrap: nowrap,
  $shrink: 0,
  $grow: 0,
  $alignContent: null,
  $justifyContent: null,
  $alignItems: null,
  $justifyItems: null) {

    @include css3-prefix(display, $display);
    @include css3-prefix(flex-direction, $direction);

    @if $placeContent == null {
        @if $alignContent   { align-content: $alignContent; }
        @if $justifyContent { justify-content: $justifyContent; }
    } @else {
        place-content: $placeContent;
    }

    @if $placeItems == null {
        @if $alignItems   { align-items: $alignItems; }
        @if $justifyItems { justify-items: $justifyItems; }
    } @else {
        place-items: $placeItems;
    }

    flex-wrap: $wrap;
    flex-shrink: $shrink;
    flex-grow: $grow;
}

@mixin pseudo(
    $width: 100%,
    $height: 100%,
    $display: inline-block,
    $pos: absolute,
    $content: ""
) {
    content: $content;
    display: $display;
    position: $pos;
    @include size($width, $height);
    @content;
}